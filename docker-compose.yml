services:
  freightui:
    image: node:20
    container_name: freight-ui-dev
    working_dir: /app
    ports:
      - "4200:4200"
    volumes:
      - ./Freight.UI:/app
      - freightui_node_modules:/app/node_modules
    command: "sh -c \"set -x && npm install && node_modules/.bin/ng serve --host 0.0.0.0 --poll 1000 2>&1\""

  freightapi:
    image: ${DOCKER_REGISTRY-}freightapi
    build:
      context: .
      dockerfile: FreightAPI/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=freight;Username=myuser;Password=mypwd
      - ASPNETCORE_URLS=http://+:8080

  postgres:
    container_name: freight-shipping-db
    image: postgres:16
    environment:
      POSTGRES_DB: freight
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypwd
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d freight"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  freightui_node_modules: